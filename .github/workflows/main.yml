name: Github Action AWS EC2 Terraform Ansible nginx
on: [push]
jobs:
  AWS-Crendentials:
    runs-on: ubuntu-latest
    steps:
      - name: "Configure AWS Credentials" #Action for GitHub Actions
  # You may pin to the exact commit or the version.
  # uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          # AWS Region, e.g. us-east-2
          aws-region: eu-central-1

          # AWS Access Key ID. Provide this key if you want to assume a role using access keys rather than a web identity token.
          aws-access-key-id: 
          # AWS Secret Access Key. Required if aws-access-key-id is provided.
          aws-secret-access-key: # optional
          # AWS Session Token.
          aws-session-token: # optional
          # Use the web identity token file from the provided file system path in order to assume an IAM role using a web identity, e.g. from within an Amazon EKS worker node.
          web-identity-token-file: # optional
          # Use existing credentials from the environment to assume a new role, rather than providing credentials as input.
          role-chaining: # optional
          # The audience to use for the OIDC provider
          audience: # optional, default is sts.amazonaws.com
          # Proxy to use for the AWS SDK agent
          http-proxy: # optional
          # Whether to mask the AWS account ID for these credentials as a secret value. By default the account ID will not be masked
          mask-aws-account-id: # optional
          # Role duration in seconds. Default is one hour.
          role-duration-seconds: # optional
          # The external ID of the role to assume.
          role-external-id: # optional
          # Role session name (default: GitHubActions)
          role-session-name: # optional
          # Skip session tagging during role assumption
          role-skip-session-tagging: # optional
          # Define an inline session policy to use when assuming a role
          inline-session-policy: # optional
          # Define a list of managed session policies to use when assuming a role
          managed-session-policies: # optional
          # Whether to set credentials as step output
          output-credentials: # optional
          # Whether to unset the existing credentials in your runner. May be useful if you run this action multiple times in the same job
          unset-current-credentials: # optional
          # Whether to disable the retry and backoff mechanism when the assume role call fails. By default the retry mechanism is enabled
          disable-retry: # optional
          # The maximum number of attempts it will attempt to retry the assume role call. By default it will retry 12 times
          retry-max-attempts: # optional
          # Some environments do not support special characters in AWS_SECRET_ACCESS_KEY. This option will retry fetching credentials until the secret access key does not contain special characters. This option overrides disable-retry and retry-max-attempts. This option is disabled by default
          special-characters-workaround: # optional
          # When enabled, this option will check if there are already valid credentials in the environment. If there are, new credentials will not be fetched. If there are not, the action will run as normal.
          use-existing-credentials: # optional
          
  
